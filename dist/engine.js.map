{"version":3,"sources":["../src/engine.js"],"names":["policyset","SourceObject","SortRulesByParameter","Rulesets","SortParameter","sort","a","b","x","y","run","sourceObj","defaultAction","default","sortingParameter","sortedRules","rules","i","length","ProcessRule","conditions","action","Conditions","result","ruleConditions","allOf","ProcessCondition","anyOf","Condition","factName","fact","factValueFromSource","getFactValueFromSource","operator","CheckEquality","value","CheckInEquality","Source","Target","Array","isArray","indexOf","factNameSplit","split","factObjFromSource","undefined","console","log","policy","ruleset","exports","RunEngine"],"mappings":"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","file":"engine.js","sourcesContent":["var policyset =   {\r\n    \"_id\" : \"5ae03e7132c2f126dc024f9d\",\r\n    \"name\" : \"Product Policy - Florist access\",\r\n    \"description\" : \"No access for global projects, full access for local products\",\r\n    \"entityName\" : \"product\",\r\n    \"policy\" : {\r\n        \"subject\" : {\r\n            \"role\" : [ \r\n                \"Florist\",\r\n                \"CSR\"\r\n            ]\r\n        },\r\n        \"resource\" : {\r\n            \"siteIds\" : [ \r\n                \"FTD\", \r\n                \"PRO\", \r\n                \"IF\"\r\n            ]\r\n        },\r\n        \"action\" : \"CUSTOM\",\r\n        \"ruleset\" : {\r\n            \"rules\" : [ \r\n                {\r\n                    \"priority\" : 2,\r\n                    \"conditions\" : {\r\n                        \"allOf\" : [ \r\n                            {\r\n                                \"fact\" : \"policy.subject.role\",\r\n                                \"operator\" : \"equal\",\r\n                                \"value\" : \"Florist\"\r\n                            },\r\n                            {\r\n                                \"fact\" : \"policy.resource.siteIds\",\r\n                                \"operator\" : \"notequal\",\r\n                                \"value\" : \"custom\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"action\" : \"FULL_ACCESS\"\r\n                }, \r\n                {\r\n                    \"priority\" : 1,\r\n                    \"conditions\" : {\r\n                        \"anyOf\" : [ \r\n                            {\r\n                                \"fact\" : \"policy.subject.role\",\r\n                                \"operator\" : \"equal\",\r\n                                \"value\" : \"APPLr\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"action\" : \"READ_ONLY\"\r\n                }\r\n            ],\r\n            \"default\" : \"NO_ACCESS\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvar SourceObject;\r\n\r\nfunction SortRulesByParameter (Rulesets, SortParameter){        \r\n    return Rulesets.sort(function(a, b) {\r\n    var x = a[SortParameter]; var y = b[SortParameter];\r\n        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n    });\r\n}\r\n\r\nvar run = function (sourceObj, Rulesets) {   \r\n    SourceObject =  sourceObj;       \r\n    var defaultAction = Rulesets.default;\r\n    var sortingParameter = 'priority';\r\n    const sortedRules = SortRulesByParameter(Rulesets.rules, sortingParameter);\r\n    \r\n    for(let i = 0; i < sortedRules.length; i++){\r\n        if(ProcessRule(sortedRules[i].conditions))\r\n        {\r\n            return sortedRules[i].action;\r\n        }\r\n    }\r\n\r\n    return defaultAction;\r\n};\r\n\r\nfunction ProcessRule (Conditions){\r\n    var result;\r\n    var ruleConditions;\r\n   \r\n    if(Conditions.allOf)\r\n    {\r\n        ruleConditions = Conditions.allOf;\r\n        result = ProcessCondition(ruleConditions[0]);\r\n\r\n        for(let i = 1; i < ruleConditions.length; i++) {\r\n              \r\n            if(result === false)\r\n            {\r\n                return false;\r\n            }\r\n            else\r\n            {\r\n                result = result && ProcessCondition(ruleConditions[i]);\r\n            }\r\n          \r\n        }\r\n        return result;\r\n    }\r\n    else if(Conditions.anyOf)\r\n    {\r\n        ruleConditions = Conditions.anyOf;\r\n        result = ProcessCondition(ruleConditions[0]);\r\n\r\n        for(let i = 1; i < Conditions.anyOf.length; i++) {           \r\n                          \r\n            if(result === true)\r\n            {\r\n                return true;\r\n            }\r\n            else \r\n            {\r\n                result = result || ProcessCondition(ruleConditions[i]);\r\n            }\r\n          \r\n        }\r\n        return result;\r\n    }\r\n    else\r\n        return false;\r\n}\r\n\r\nfunction ProcessCondition(Condition) {\r\n    var factName = Condition.fact;\r\n    var factValueFromSource = getFactValueFromSource(factName);\r\n    \r\n    if(factValueFromSource  ==  null)\r\n        return false;\r\n\r\n    switch (Condition.operator) {\r\n        case 'equal':\r\n            return CheckEquality(Condition.value, factValueFromSource);\r\n            break;\r\n        case 'notequal':\r\n            return CheckInEquality(Condition.value, factValueFromSource);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction CheckEquality(Source, Target) {\r\n    if(Array.isArray(Target))\r\n    {\r\n        return Target.indexOf(Source) > -1;\r\n    }\r\n    else\r\n        return Source == Target;\r\n}\r\n\r\nfunction CheckInEquality(Source, Target) {\r\n    if(Array.isArray(Target))\r\n    {\r\n        return Target.indexOf(Source) < 0;\r\n    }\r\n    else\r\n        return Source != Target;\r\n}\r\n\r\nfunction getFactValueFromSource(factName) {\r\n    var factNameSplit = factName.split('.');    \r\n    var factObjFromSource = SourceObject[factNameSplit[0]];\r\n    if(factNameSplit.length > 1)\r\n    {\r\n        for(var i = 1; i< factNameSplit.length; i++)\r\n        {\r\n            factObjFromSource = factObjFromSource[factNameSplit[i]];\r\n\r\n            if(factObjFromSource === undefined)\r\n            {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return factObjFromSource;        \r\n}\r\n\r\nconsole.log(run(policyset, policyset.policy.ruleset));\r\n\r\n\r\nexports.RunEngine = run;\r\n"]}